const { createClient } = require('@supabase/supabase-js');

// ุฅุนุฏุงุฏ Supabase
const supabaseUrl = 'https://ddwszecfsfkjnahesymm.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRkd3N6ZWNmc2Zram5haGVzeW1tIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgzMDc2MDYsImV4cCI6MjA2Mzg4MzYwNn0.5jo4tgLAMqwVnYkhUYBa3WrNxann8xBqkNzba8DaCMg';
const supabase = createClient(supabaseUrl, supabaseKey);

async function testFixedImageSearch() {
  try {
    console.log('๐ง ุงุฎุชุจุงุฑ ุงูุจุญุซ ุงููุตุญุญ ุนู ุงูุตูุฑ...\n');
    
    const testConversationId = 'test-fixed-search-' + Date.now();
    
    // 1. ูุณุญ ุฃู ุฑุณุงุฆู ุณุงุจูุฉ
    await supabase
      .from('test_messages')
      .delete()
      .eq('conversation_id', testConversationId);
    
    console.log('๐ค ุงุฎุชุจุงุฑ ุทูุจ ุตูุฑุฉ ููุชุดู ุฃุญูุฑ...');
    
    // 2. ุฅุฑุณุงู ุทูุจ ุตูุฑุฉ
    const response = await fetch('http://localhost:3002/api/gemini/process', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        senderId: 'test-user-fixed',
        messageText: 'ุนุงูุฒุฉ ุงุดูู ููุชุดู ุฃุญูุฑ',
        pageId: 'test-page',
        conversationId: testConversationId
      })
    });
    
    if (!response.ok) {
      console.error(`โ ุฎุทุฃ ูู API: ${response.status}`);
      return false;
    }
    
    const result = await response.json();
    console.log(`๐ ูุชูุฌุฉ API: ${result.success ? 'ูุฌุญ โ' : 'ูุดู โ'}`);
    
    // 3. ุงูุชุธุงุฑ ุงููุนุงูุฌุฉ
    console.log('\nโณ ุงูุชุธุงุฑ ูุนุงูุฌุฉ ุงูุฑุณุงูุฉ...');
    await new Promise(resolve => setTimeout(resolve, 5000));
    
    // 4. ูุญุต ุงูุฑุณุงุฆู
    const { data: messages, error } = await supabase
      .from('test_messages')
      .select('*')
      .eq('conversation_id', testConversationId)
      .order('created_at', { ascending: true });
    
    if (error) {
      console.error('โ ุฎุทุฃ ูู ุฌูุจ ุงูุฑุณุงุฆู:', error.message);
      return false;
    }
    
    console.log(`\n๐จ ุนุฏุฏ ุงูุฑุณุงุฆู: ${messages?.length || 0}`);
    
    let foundImages = false;
    
    if (messages && messages.length > 0) {
      messages.forEach((msg, index) => {
        const sender = msg.sender_type === 'user' ? '๐ค ุงูุนููู' : '๐ค Gemini';
        console.log(`\n${index + 1}. ${sender}:`);
        console.log(`   ๐ ุงููุญุชูู: ${msg.content.substring(0, 100)}...`);
        
        // ูุญุต ุฑุณุงุฆู ุงูุตูุฑ
        if (msg.content.startsWith('๐ธ ุตูุฑุฉ')) {
          console.log(`   ๐ผ๏ธ ูุฐู ุฑุณุงูุฉ ุตูุฑุฉ! โ`);
          foundImages = true;
        }
        
        // ูุญุต ุฃูุงูุฑ ุงูุตูุฑ ูู ุงููุต
        if (msg.content.includes('[SEND_IMAGE:')) {
          console.log(`   ๐ธ ูุญุชูู ุนูู ุฃูุฑ ุตูุฑุฉ (ูู ููููุฐ)`);
        }
        
        // ูุญุต ุฑุณุงุฆู ุงููุฌุงุญ
        if (msg.content.includes('ุชู ุฅุฑุณุงู ุตูุฑ')) {
          console.log(`   โ ุฑุณุงูุฉ ูุฌุงุญ ุฅุฑุณุงู ุงูุตูุฑ`);
          foundImages = true;
        }
        
        // ูุญุต ุฑุณุงุฆู ุงููุดู
        if (msg.content.includes('ูุง ุชูุฌุฏ ุตูุฑ ูุชุงุญุฉ')) {
          console.log(`   โ ูุง ุชูุฌุฏ ุตูุฑ ูุชุงุญุฉ`);
        }
      });
    }
    
    // 5. ุงุฎุชุจุงุฑ ุงูุจุญุซ ุงููุจุงุดุฑ
    console.log('\n๐ ุงุฎุชุจุงุฑ ุงูุจุญุซ ุงููุจุงุดุฑ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช...');
    
    // ุงูุจุญุซ ุนู ุฃุญูุฑ
    const { data: redVariants } = await supabase
      .from('product_variants')
      .select('image_url, color, size')
      .ilike('color', '%ุฃุญูุฑ%')
      .not('image_url', 'is', null)
      .limit(3);
    
    console.log(`๐ด ููุชุฌุงุช ุญูุฑุงุก: ${redVariants?.length || 0}`);
    if (redVariants && redVariants.length > 0) {
      redVariants.forEach(v => {
        console.log(`   - ${v.color} ููุงุณ ${v.size}: ${v.image_url.substring(0, 50)}...`);
      });
    }
    
    // 6. ุงููุชูุฌุฉ ุงูููุงุฆูุฉ
    console.log(`\n๐ฏ ุงููุชูุฌุฉ ุงูููุงุฆูุฉ:`);
    console.log(`   ๐จ ุฅุฌูุงูู ุงูุฑุณุงุฆู: ${messages?.length || 0}`);
    console.log(`   ๐ผ๏ธ ุชู ุฅุฑุณุงู ุตูุฑ: ${foundImages ? 'ูุนู โ' : 'ูุง โ'}`);
    console.log(`   ๐ธ ุตูุฑ ูุชุงุญุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช: ${redVariants?.length || 0}`);
    
    return foundImages;
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ:', error.message);
    return false;
  }
}

// ุชุดุบูู ุงูุงุฎุชุจุงุฑ
if (require.main === module) {
  testFixedImageSearch().then(success => {
    console.log('\n' + '='.repeat(60));
    if (success) {
      console.log('๐ ุงููุธุงู ูุนูู! ุชู ุฅุฑุณุงู ุงูุตูุฑ ุจูุฌุงุญ');
    } else {
      console.log('โ ุงููุธุงู ูุง ูุฒุงู ูุง ูุฑุณู ุงูุตูุฑ');
      console.log('๐ก ุชุญูู ูู:');
      console.log('   1. ุฅุนุงุฏุฉ ุชุดุบูู ุงูุณุฑูุฑ');
      console.log('   2. ุณุฌูุงุช ุงูุณุฑูุฑ');
      console.log('   3. ุฏุงูุฉ ุงูุจุญุซ ุงููุญุฏุซุฉ');
    }
    process.exit(success ? 0 : 1);
  });
}

module.exports = { testFixedImageSearch };
