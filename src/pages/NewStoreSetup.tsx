import React, { useState, useEffect } from 'react';
import { useToast } from '@/hooks/use-toast';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Badge } from '@/components/ui/badge';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Switch } from '@/components/ui/switch';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { 
  Settings, 
  Store, 
  Globe, 
  Palette, 
  Bell, 
  Shield, 
  CreditCard, 
  Mail,
  Phone,
  MapPin,
  Clock,
  Save,
  Upload,
  Loader2,
  CheckCircle,
  AlertCircle,
  Eye,
  EyeOff,
  RefreshCw,
  Image,
  Link,
  Users,
  Package
} from 'lucide-react';

// ููุน ุงูุจูุงูุงุช ูุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ
interface StoreSettings {
  // ูุนูููุงุช ุฃุณุงุณูุฉ
  store_name: string;
  store_description: string;
  store_logo?: string;
  store_banner?: string;
  store_email: string;
  store_phone: string;
  store_address: string;
  store_website?: string;
  
  // ุฅุนุฏุงุฏุงุช ุงูุนููุฉ ูุงูููุทูุฉ
  currency: string;
  timezone: string;
  language: string;
  country: string;
  
  // ุฅุนุฏุงุฏุงุช ุงูุชุดุบูู
  is_active: boolean;
  maintenance_mode: boolean;
  allow_guest_checkout: boolean;
  require_account_verification: boolean;
  
  // ุฅุนุฏุงุฏุงุช ุงูุถุฑุงุฆุจ
  tax_enabled: boolean;
  tax_rate: number;
  tax_inclusive: boolean;
  
  // ุฅุนุฏุงุฏุงุช ุงูุดุญู
  free_shipping_threshold: number;
  default_shipping_cost: number;
  
  // ุฅุนุฏุงุฏุงุช ุงูุฅุดุนุงุฑุงุช
  email_notifications: boolean;
  sms_notifications: boolean;
  order_notifications: boolean;
  low_stock_notifications: boolean;
  
  // ุฅุนุฏุงุฏุงุช ุงูุฃูุงู
  enable_ssl: boolean;
  enable_captcha: boolean;
  max_login_attempts: number;
  session_timeout: number;
  
  // ุฅุนุฏุงุฏุงุช SEO
  meta_title?: string;
  meta_description?: string;
  meta_keywords?: string;
  
  // ุฅุนุฏุงุฏุงุช ุงูุชุฎุตูุต
  primary_color: string;
  secondary_color: string;
  custom_css?: string;
  custom_js?: string;
  
  created_at?: string;
  updated_at?: string;
}

const NewStoreSetup: React.FC = () => {
  const { toast } = useToast();
  
  // ุงูุญุงูุงุช ุงูุฃุณุงุณูุฉ
  const [settings, setSettings] = useState<StoreSettings | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [isSaving, setIsSaving] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [activeTab, setActiveTab] = useState('general');

  // Company ID ุซุงุจุช ููุงุฎุชุจุงุฑ
  const COMPANY_ID = '2d9b8887-0cca-430b-b61b-ca16cccfec63';

  // ุฏุงูุฉ ุฌูุจ ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ
  const fetchStoreSettings = async () => {
    try {
      setIsLoading(true);
      setError(null);
      
      console.log('โ๏ธ ุฌูุจ ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ ููุดุฑูุฉ:', COMPANY_ID);
      
      const response = await fetch(`http://localhost:3002/api/companies/${COMPANY_ID}/store-settings`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.success) {
        setSettings(result.data);
        console.log('โ ุชู ุฌูุจ ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ ุจูุฌุงุญ');
      } else {
        throw new Error(result.message || 'ูุดู ูู ุฌูุจ ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ');
      }
    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุฌูุจ ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ:', error);
      setError('ูุดู ูู ุชุญููู ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ');
      
      // ุฅุนุฏุงุฏุงุช ุงูุชุฑุงุถูุฉ ููุนุฑุถ
      setSettings({
        store_name: 'ูุชุฌุฑู ุงูุฅููุชุฑููู',
        store_description: 'ูุชุฌุฑ ุฅููุชุฑููู ูุชููุฒ ูุจูุน ุงูููุชุฌุงุช ุนุงููุฉ ุงูุฌูุฏุฉ',
        store_email: 'info@mystore.com',
        store_phone: '+966501234567',
        store_address: 'ุงูุฑูุงุถุ ุงูููููุฉ ุงูุนุฑุจูุฉ ุงูุณุนูุฏูุฉ',
        currency: 'SAR',
        timezone: 'Asia/Riyadh',
        language: 'ar',
        country: 'SA',
        is_active: true,
        maintenance_mode: false,
        allow_guest_checkout: true,
        require_account_verification: false,
        tax_enabled: true,
        tax_rate: 15,
        tax_inclusive: false,
        free_shipping_threshold: 200,
        default_shipping_cost: 25,
        email_notifications: true,
        sms_notifications: false,
        order_notifications: true,
        low_stock_notifications: true,
        enable_ssl: true,
        enable_captcha: false,
        max_login_attempts: 5,
        session_timeout: 30,
        primary_color: '#3B82F6',
        secondary_color: '#10B981'
      });
      
      toast({
        title: "ุชุญุฐูุฑ",
        description: "ุชู ุนุฑุถ ุฅุนุฏุงุฏุงุช ุงูุชุฑุงุถูุฉ - ูุดู ูู ุงูุงุชุตุงู ุจุงูุฎุงุฏู",
        variant: "destructive"
      });
    } finally {
      setIsLoading(false);
    }
  };

  // ุฏุงูุฉ ุญูุธ ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ
  const saveStoreSettings = async () => {
    if (!settings) return;

    try {
      setIsSaving(true);
      setError(null);

      console.log('๐พ ุญูุธ ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ:', settings);

      const response = await fetch(`http://localhost:3002/api/companies/${COMPANY_ID}/store-settings`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(settings)
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.success) {
        setSettings(result.data);
        toast({
          title: "ูุฌุญ",
          description: "ุชู ุญูุธ ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ ุจูุฌุงุญ",
        });
        console.log('โ ุชู ุญูุธ ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ ุจูุฌุงุญ');
      } else {
        throw new Error(result.message || 'ูุดู ูู ุญูุธ ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ');
      }
    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุญูุธ ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ:', error);
      setError('ูุดู ูู ุญูุธ ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ');
      toast({
        title: "ุฎุทุฃ",
        description: "ูุดู ูู ุญูุธ ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ",
        variant: "destructive"
      });
    } finally {
      setIsSaving(false);
    }
  };

  // ุฏุงูุฉ ุชุญุฏูุซ ุงูุฅุนุฏุงุฏุงุช
  const updateSetting = (key: keyof StoreSettings, value: any) => {
    if (!settings) return;
    setSettings(prev => ({
      ...prev!,
      [key]: value
    }));
  };

  // ุฏุงูุฉ ุฑูุน ุงูุตูุฑ
  const uploadImage = async (file: File, type: 'logo' | 'banner') => {
    try {
      const formData = new FormData();
      formData.append('image', file);
      formData.append('type', type);

      const response = await fetch(`http://localhost:3002/api/companies/${COMPANY_ID}/upload-store-image`, {
        method: 'POST',
        body: formData
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.success) {
        updateSetting(type === 'logo' ? 'store_logo' : 'store_banner', result.data.url);
        toast({
          title: "ูุฌุญ",
          description: `ุชู ุฑูุน ${type === 'logo' ? 'ุงูุดุนุงุฑ' : 'ุงูุจุงูุฑ'} ุจูุฌุงุญ`,
        });
      } else {
        throw new Error(result.message || 'ูุดู ูู ุฑูุน ุงูุตูุฑุฉ');
      }
    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุฑูุน ุงูุตูุฑุฉ:', error);
      toast({
        title: "ุฎุทุฃ",
        description: "ูุดู ูู ุฑูุน ุงูุตูุฑุฉ",
        variant: "destructive"
      });
    }
  };

  // ุชุญููู ุงูุจูุงูุงุช ุนูุฏ ุจุฏุก ุงูุชุดุบูู
  useEffect(() => {
    fetchStoreSettings();
  }, []);

  // ุนุฑุถ ุดุงุดุฉ ุงูุชุญููู
  if (isLoading) {
    return (
      <div className="container mx-auto px-6 py-8" dir="rtl">
        <div className="flex items-center justify-center min-h-[400px]">
          <div className="text-center">
            <Loader2 className="h-12 w-12 animate-spin mx-auto mb-4 text-blue-600" />
            <h2 className="text-xl font-semibold text-gray-700 mb-2">ุฌุงุฑู ุชุญููู ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ...</h2>
            <p className="text-gray-500">ูุฑุฌู ุงูุงูุชุธุงุฑ ููููุงู</p>
          </div>
        </div>
      </div>
    );
  }

  if (!settings) {
    return (
      <div className="container mx-auto px-6 py-8" dir="rtl">
        <Card>
          <CardContent className="p-12 text-center">
            <AlertCircle className="w-16 h-16 mx-auto mb-4 text-red-400" />
            <h3 className="text-xl font-semibold text-gray-700 mb-2">ุฎุทุฃ ูู ุชุญููู ุงูุฅุนุฏุงุฏุงุช</h3>
            <p className="text-gray-500 mb-4">ูุดู ูู ุชุญููู ุฅุนุฏุงุฏุงุช ุงููุชุฌุฑ</p>
            <Button onClick={fetchStoreSettings}>
              <RefreshCw className="w-4 h-4 ml-2" />
              ุฅุนุงุฏุฉ ุงููุญุงููุฉ
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-6 py-8" dir="rtl">
      {/* Header */}
      <div className="flex items-center justify-between mb-8">
        <div>
          <h1 className="text-3xl font-bold text-gray-900 flex items-center gap-3">
            <Settings className="w-8 h-8 text-blue-600" />
            ุฅุนุฏุงุฏ ุงููุชุฌุฑ ุงูุฌุฏูุฏ
          </h1>
          <p className="text-gray-600 mt-2">ุฅุนุฏุงุฏุงุช ุดุงููุฉ ูููุชุฌุฑ ูุงูุชุฎุตูุต ูุน ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุจุงุดุฑุฉ</p>
        </div>

        <div className="flex items-center gap-4">
          <Button variant="outline" onClick={fetchStoreSettings}>
            <RefreshCw className="w-4 h-4 ml-2" />
            ุชุญุฏูุซ
          </Button>

          <Button
            onClick={saveStoreSettings}
            disabled={isSaving}
            className="bg-green-600 hover:bg-green-700"
          >
            {isSaving ? (
              <>
                <Loader2 className="w-4 h-4 animate-spin ml-2" />
                ุฌุงุฑู ุงูุญูุธ...
              </>
            ) : (
              <>
                <Save className="w-4 h-4 ml-2" />
                ุญูุธ ุงูุฅุนุฏุงุฏุงุช
              </>
            )}
          </Button>
        </div>
      </div>

      {/* ุญุงูุฉ ุงููุชุฌุฑ */}
      <Card className="mb-8">
        <CardContent className="p-6">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-4">
              <div className="p-3 bg-blue-100 rounded-lg">
                <Store className="w-6 h-6 text-blue-600" />
              </div>
              <div>
                <h3 className="font-semibold text-lg">ุญุงูุฉ ุงููุชุฌุฑ</h3>
                <p className="text-gray-600">ุฅุฏุงุฑุฉ ุญุงูุฉ ุชุดุบูู ุงููุชุฌุฑ</p>
              </div>
            </div>

            <div className="flex items-center gap-6">
              <div className="flex items-center gap-3">
                <Switch
                  checked={settings.is_active}
                  onCheckedChange={(checked) => updateSetting('is_active', checked)}
                />
                <div>
                  <p className="font-medium">ุงููุชุฌุฑ ูุดุท</p>
                  <p className="text-sm text-gray-500">ุชูุนูู/ุฅูุบุงุก ุชูุนูู ุงููุชุฌุฑ</p>
                </div>
              </div>

              <div className="flex items-center gap-3">
                <Switch
                  checked={settings.maintenance_mode}
                  onCheckedChange={(checked) => updateSetting('maintenance_mode', checked)}
                />
                <div>
                  <p className="font-medium">ูุถุน ุงูุตูุงูุฉ</p>
                  <p className="text-sm text-gray-500">ุฅุบูุงู ูุคูุช ููุตูุงูุฉ</p>
                </div>
              </div>

              <Badge variant={settings.is_active ? 'default' : 'secondary'} className="text-lg px-4 py-2">
                {settings.is_active ? (settings.maintenance_mode ? 'ุตูุงูุฉ' : 'ูุดุท') : 'ูุนุทู'}
              </Badge>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* ุงูุชุจููุจุงุช */}
      <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-6">
        <TabsList className="grid w-full grid-cols-6">
          <TabsTrigger value="general" className="flex items-center gap-2">
            <Store className="w-4 h-4" />
            ุนุงู
          </TabsTrigger>
          <TabsTrigger value="appearance" className="flex items-center gap-2">
            <Palette className="w-4 h-4" />
            ุงููุธูุฑ
          </TabsTrigger>
          <TabsTrigger value="business" className="flex items-center gap-2">
            <Package className="w-4 h-4" />
            ุงูุชุฌุงุฑุฉ
          </TabsTrigger>
          <TabsTrigger value="notifications" className="flex items-center gap-2">
            <Bell className="w-4 h-4" />
            ุงูุฅุดุนุงุฑุงุช
          </TabsTrigger>
          <TabsTrigger value="security" className="flex items-center gap-2">
            <Shield className="w-4 h-4" />
            ุงูุฃูุงู
          </TabsTrigger>
          <TabsTrigger value="seo" className="flex items-center gap-2">
            <Globe className="w-4 h-4" />
            SEO
          </TabsTrigger>
        </TabsList>

        {/* ุชุจููุจ ุงูุฅุนุฏุงุฏุงุช ุงูุนุงูุฉ */}
        <TabsContent value="general">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Store className="w-5 h-5" />
                  ูุนูููุงุช ุงููุชุฌุฑ ุงูุฃุณุงุณูุฉ
                </CardTitle>
                <CardDescription>ุงููุนูููุงุช ุงูุฃุณุงุณูุฉ ูููุชุฌุฑ</CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <label className="block text-sm font-medium mb-2">ุงุณู ุงููุชุฌุฑ *</label>
                  <Input
                    value={settings.store_name}
                    onChange={(e) => updateSetting('store_name', e.target.value)}
                    placeholder="ุงุณู ุงููุชุฌุฑ"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">ูุตู ุงููุชุฌุฑ</label>
                  <Textarea
                    value={settings.store_description}
                    onChange={(e) => updateSetting('store_description', e.target.value)}
                    placeholder="ูุตู ูุฎุชุตุฑ ุนู ุงููุชุฌุฑ"
                    rows={3}
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">ุงูุจุฑูุฏ ุงูุฅููุชุฑููู *</label>
                  <Input
                    type="email"
                    value={settings.store_email}
                    onChange={(e) => updateSetting('store_email', e.target.value)}
                    placeholder="info@store.com"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">ุฑูู ุงููุงุชู</label>
                  <Input
                    value={settings.store_phone}
                    onChange={(e) => updateSetting('store_phone', e.target.value)}
                    placeholder="+966501234567"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">ุงูุนููุงู</label>
                  <Textarea
                    value={settings.store_address}
                    onChange={(e) => updateSetting('store_address', e.target.value)}
                    placeholder="ุนููุงู ุงููุชุฌุฑ ุงููุงูู"
                    rows={2}
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">ุงููููุน ุงูุฅููุชุฑููู</label>
                  <Input
                    value={settings.store_website || ''}
                    onChange={(e) => updateSetting('store_website', e.target.value)}
                    placeholder="https://www.store.com"
                  />
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Globe className="w-5 h-5" />
                  ุงูุฅุนุฏุงุฏุงุช ุงูุฅูููููุฉ
                </CardTitle>
                <CardDescription>ุงูุนููุฉ ูุงูููุทูุฉ ุงูุฒูููุฉ ูุงููุบุฉ</CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <label className="block text-sm font-medium mb-2">ุงูุนููุฉ</label>
                  <Select value={settings.currency} onValueChange={(value) => updateSetting('currency', value)}>
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="SAR">ุฑูุงู ุณุนูุฏู (SAR)</SelectItem>
                      <SelectItem value="USD">ุฏููุงุฑ ุฃูุฑููู (USD)</SelectItem>
                      <SelectItem value="EUR">ููุฑู (EUR)</SelectItem>
                      <SelectItem value="AED">ุฏุฑูู ุฅูุงุฑุงุชู (AED)</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">ุงูููุทูุฉ ุงูุฒูููุฉ</label>
                  <Select value={settings.timezone} onValueChange={(value) => updateSetting('timezone', value)}>
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="Asia/Riyadh">ุงูุฑูุงุถ (GMT+3)</SelectItem>
                      <SelectItem value="Asia/Dubai">ุฏุจู (GMT+4)</SelectItem>
                      <SelectItem value="Asia/Kuwait">ุงููููุช (GMT+3)</SelectItem>
                      <SelectItem value="UTC">UTC (GMT+0)</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">ุงููุบุฉ</label>
                  <Select value={settings.language} onValueChange={(value) => updateSetting('language', value)}>
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="ar">ุงูุนุฑุจูุฉ</SelectItem>
                      <SelectItem value="en">English</SelectItem>
                      <SelectItem value="fr">Franรงais</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">ุงูุจูุฏ</label>
                  <Select value={settings.country} onValueChange={(value) => updateSetting('country', value)}>
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="SA">ุงูููููุฉ ุงูุนุฑุจูุฉ ุงูุณุนูุฏูุฉ</SelectItem>
                      <SelectItem value="AE">ุงูุฅูุงุฑุงุช ุงูุนุฑุจูุฉ ุงููุชุญุฏุฉ</SelectItem>
                      <SelectItem value="KW">ุงููููุช</SelectItem>
                      <SelectItem value="QA">ูุทุฑ</SelectItem>
                      <SelectItem value="BH">ุงูุจุญุฑูู</SelectItem>
                      <SelectItem value="OM">ุนูุงู</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div className="space-y-3 pt-4 border-t">
                  <div className="flex items-center justify-between">
                    <div>
                      <p className="font-medium">ุงูุณูุงุญ ุจุงูุดุฑุงุก ูุถูู</p>
                      <p className="text-sm text-gray-500">ุงูุณูุงุญ ููุฒูุงุฑ ุจุงูุดุฑุงุก ุจุฏูู ุชุณุฌูู</p>
                    </div>
                    <Switch
                      checked={settings.allow_guest_checkout}
                      onCheckedChange={(checked) => updateSetting('allow_guest_checkout', checked)}
                    />
                  </div>

                  <div className="flex items-center justify-between">
                    <div>
                      <p className="font-medium">ุชุฃููุฏ ุงูุญุณุงุจ ูุทููุจ</p>
                      <p className="text-sm text-gray-500">ุทูุจ ุชุฃููุฏ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู</p>
                    </div>
                    <Switch
                      checked={settings.require_account_verification}
                      onCheckedChange={(checked) => updateSetting('require_account_verification', checked)}
                    />
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        {/* ุชุจููุจ ุงููุธูุฑ */}
        <TabsContent value="appearance">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Image className="w-5 h-5" />
                  ุงูุตูุฑ ูุงูุดุนุงุฑุงุช
                </CardTitle>
                <CardDescription>ุฑูุน ูุฅุฏุงุฑุฉ ุตูุฑ ุงููุชุฌุฑ</CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                <div>
                  <label className="block text-sm font-medium mb-2">ุดุนุงุฑ ุงููุชุฌุฑ</label>
                  <div className="flex items-center gap-4">
                    {settings.store_logo && (
                      <img src={settings.store_logo} alt="ุดุนุงุฑ ุงููุชุฌุฑ" className="w-16 h-16 object-cover rounded-lg" />
                    )}
                    <div className="flex-1">
                      <Input
                        type="file"
                        accept="image/*"
                        onChange={(e) => {
                          const file = e.target.files?.[0];
                          if (file) uploadImage(file, 'logo');
                        }}
                      />
                      <p className="text-xs text-gray-500 mt-1">PNG, JPG ุญุชู 2MB</p>
                    </div>
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">ุจุงูุฑ ุงููุชุฌุฑ</label>
                  <div className="flex items-center gap-4">
                    {settings.store_banner && (
                      <img src={settings.store_banner} alt="ุจุงูุฑ ุงููุชุฌุฑ" className="w-24 h-16 object-cover rounded-lg" />
                    )}
                    <div className="flex-1">
                      <Input
                        type="file"
                        accept="image/*"
                        onChange={(e) => {
                          const file = e.target.files?.[0];
                          if (file) uploadImage(file, 'banner');
                        }}
                      />
                      <p className="text-xs text-gray-500 mt-1">PNG, JPG ุญุชู 5MB</p>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Palette className="w-5 h-5" />
                  ุงูุฃููุงู ูุงูุชุฎุตูุต
                </CardTitle>
                <CardDescription>ุชุฎุตูุต ุฃููุงู ูุดูู ุงููุชุฌุฑ</CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <label className="block text-sm font-medium mb-2">ุงูููู ุงูุฃุณุงุณู</label>
                  <div className="flex items-center gap-3">
                    <Input
                      type="color"
                      value={settings.primary_color}
                      onChange={(e) => updateSetting('primary_color', e.target.value)}
                      className="w-16 h-10"
                    />
                    <Input
                      value={settings.primary_color}
                      onChange={(e) => updateSetting('primary_color', e.target.value)}
                      placeholder="#3B82F6"
                    />
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">ุงูููู ุงูุซุงููู</label>
                  <div className="flex items-center gap-3">
                    <Input
                      type="color"
                      value={settings.secondary_color}
                      onChange={(e) => updateSetting('secondary_color', e.target.value)}
                      className="w-16 h-10"
                    />
                    <Input
                      value={settings.secondary_color}
                      onChange={(e) => updateSetting('secondary_color', e.target.value)}
                      placeholder="#10B981"
                    />
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">CSS ูุฎุตุต</label>
                  <Textarea
                    value={settings.custom_css || ''}
                    onChange={(e) => updateSetting('custom_css', e.target.value)}
                    placeholder="/* ุฃุถู CSS ูุฎุตุต ููุง */"
                    rows={4}
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">JavaScript ูุฎุตุต</label>
                  <Textarea
                    value={settings.custom_js || ''}
                    onChange={(e) => updateSetting('custom_js', e.target.value)}
                    placeholder="// ุฃุถู JavaScript ูุฎุตุต ููุง"
                    rows={4}
                  />
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        {/* ุชุจููุจ ุงูุฅุนุฏุงุฏุงุช ุงูุชุฌุงุฑูุฉ */}
        <TabsContent value="business">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <CreditCard className="w-5 h-5" />
                  ุฅุนุฏุงุฏุงุช ุงูุถุฑุงุฆุจ
                </CardTitle>
                <CardDescription>ุฅุนุฏุงุฏ ุงูุถุฑุงุฆุจ ูุงูุฑุณูู</CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="font-medium">ุชูุนูู ุงูุถุฑุงุฆุจ</p>
                    <p className="text-sm text-gray-500">ุฅุถุงูุฉ ุถุฑูุจุฉ ุงููููุฉ ุงููุถุงูุฉ</p>
                  </div>
                  <Switch
                    checked={settings.tax_enabled}
                    onCheckedChange={(checked) => updateSetting('tax_enabled', checked)}
                  />
                </div>

                {settings.tax_enabled && (
                  <>
                    <div>
                      <label className="block text-sm font-medium mb-2">ูุนุฏู ุงูุถุฑูุจุฉ (%)</label>
                      <Input
                        type="number"
                        value={settings.tax_rate}
                        onChange={(e) => updateSetting('tax_rate', parseFloat(e.target.value) || 0)}
                        placeholder="15"
                        min="0"
                        max="100"
                        step="0.1"
                      />
                    </div>

                    <div className="flex items-center justify-between">
                      <div>
                        <p className="font-medium">ุงูุถุฑูุจุฉ ุดุงููุฉ</p>
                        <p className="text-sm text-gray-500">ุงูุฃุณุนุงุฑ ุชุดูู ุงูุถุฑูุจุฉ</p>
                      </div>
                      <Switch
                        checked={settings.tax_inclusive}
                        onCheckedChange={(checked) => updateSetting('tax_inclusive', checked)}
                      />
                    </div>
                  </>
                )}
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Package className="w-5 h-5" />
                  ุฅุนุฏุงุฏุงุช ุงูุดุญู
                </CardTitle>
                <CardDescription>ุฅุนุฏุงุฏ ุชูุงููู ุงูุดุญู ุงูุงูุชุฑุงุถูุฉ</CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <label className="block text-sm font-medium mb-2">ุชูููุฉ ุงูุดุญู ุงูุงูุชุฑุงุถูุฉ (ุฑ.ุณ)</label>
                  <Input
                    type="number"
                    value={settings.default_shipping_cost}
                    onChange={(e) => updateSetting('default_shipping_cost', parseFloat(e.target.value) || 0)}
                    placeholder="25"
                    min="0"
                    step="0.01"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">ุญุฏ ุงูุดุญู ุงููุฌุงูู (ุฑ.ุณ)</label>
                  <Input
                    type="number"
                    value={settings.free_shipping_threshold}
                    onChange={(e) => updateSetting('free_shipping_threshold', parseFloat(e.target.value) || 0)}
                    placeholder="200"
                    min="0"
                    step="0.01"
                  />
                  <p className="text-xs text-gray-500 mt-1">ุดุญู ูุฌุงูู ููุทูุจุงุช ุฃูุซุฑ ูู ูุฐุง ุงููุจูุบ</p>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        {/* ุชุจููุจ ุงูุฅุดุนุงุฑุงุช */}
        <TabsContent value="notifications">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Bell className="w-5 h-5" />
                ุฅุนุฏุงุฏุงุช ุงูุฅุดุนุงุฑุงุช
              </CardTitle>
              <CardDescription>ุชุญูู ูู ุฃููุงุน ุงูุฅุดุนุงุฑุงุช ุงููุฎุชููุฉ</CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div className="space-y-4">
                  <h4 className="font-medium text-lg">ุฅุดุนุงุฑุงุช ุงูุจุฑูุฏ ุงูุฅููุชุฑููู</h4>

                  <div className="flex items-center justify-between">
                    <div>
                      <p className="font-medium">ุชูุนูู ุฅุดุนุงุฑุงุช ุงูุจุฑูุฏ</p>
                      <p className="text-sm text-gray-500">ุฅุฑุณุงู ุฅุดุนุงุฑุงุช ุนุจุฑ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู</p>
                    </div>
                    <Switch
                      checked={settings.email_notifications}
                      onCheckedChange={(checked) => updateSetting('email_notifications', checked)}
                    />
                  </div>

                  <div className="flex items-center justify-between">
                    <div>
                      <p className="font-medium">ุฅุดุนุงุฑุงุช ุงูุทูุจุงุช</p>
                      <p className="text-sm text-gray-500">ุฅุดุนุงุฑ ุนูุฏ ูุตูู ุทูุจ ุฌุฏูุฏ</p>
                    </div>
                    <Switch
                      checked={settings.order_notifications}
                      onCheckedChange={(checked) => updateSetting('order_notifications', checked)}
                    />
                  </div>

                  <div className="flex items-center justify-between">
                    <div>
                      <p className="font-medium">ุฅุดุนุงุฑุงุช ุงููุฎุฒูู ุงูููุฎูุถ</p>
                      <p className="text-sm text-gray-500">ุชูุจูู ุนูุฏ ููุงุฏ ุงููุฎุฒูู</p>
                    </div>
                    <Switch
                      checked={settings.low_stock_notifications}
                      onCheckedChange={(checked) => updateSetting('low_stock_notifications', checked)}
                    />
                  </div>
                </div>

                <div className="space-y-4">
                  <h4 className="font-medium text-lg">ุฅุดุนุงุฑุงุช ุงูุฑุณุงุฆู ุงููุตูุฉ</h4>

                  <div className="flex items-center justify-between">
                    <div>
                      <p className="font-medium">ุชูุนูู ุงูุฑุณุงุฆู ุงููุตูุฉ</p>
                      <p className="text-sm text-gray-500">ุฅุฑุณุงู ุฅุดุนุงุฑุงุช ุนุจุฑ SMS</p>
                    </div>
                    <Switch
                      checked={settings.sms_notifications}
                      onCheckedChange={(checked) => updateSetting('sms_notifications', checked)}
                    />
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* ุชุจููุจ ุงูุฃูุงู */}
        <TabsContent value="security">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Shield className="w-5 h-5" />
                ุฅุนุฏุงุฏุงุช ุงูุฃูุงู
              </CardTitle>
              <CardDescription>ุชุญูู ูู ุฅุนุฏุงุฏุงุช ุงูุฃูุงู ูุงูุญูุงูุฉ</CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div className="space-y-4">
                  <h4 className="font-medium text-lg">ุฅุนุฏุงุฏุงุช ุงูุญูุงูุฉ</h4>

                  <div className="flex items-center justify-between">
                    <div>
                      <p className="font-medium">ุชูุนูู SSL</p>
                      <p className="text-sm text-gray-500">ุงุณุชุฎุฏุงู HTTPS ููุงุชุตุงู ุงูุขูู</p>
                    </div>
                    <Switch
                      checked={settings.enable_ssl}
                      onCheckedChange={(checked) => updateSetting('enable_ssl', checked)}
                    />
                  </div>

                  <div className="flex items-center justify-between">
                    <div>
                      <p className="font-medium">ุชูุนูู CAPTCHA</p>
                      <p className="text-sm text-gray-500">ุญูุงูุฉ ูู ุงูุฑูุจูุชุงุช</p>
                    </div>
                    <Switch
                      checked={settings.enable_captcha}
                      onCheckedChange={(checked) => updateSetting('enable_captcha', checked)}
                    />
                  </div>
                </div>

                <div className="space-y-4">
                  <h4 className="font-medium text-lg">ุฅุนุฏุงุฏุงุช ุงูุฌูุณุฉ</h4>

                  <div>
                    <label className="block text-sm font-medium mb-2">ุงูุญุฏ ุงูุฃูุตู ููุญุงููุงุช ุชุณุฌูู ุงูุฏุฎูู</label>
                    <Input
                      type="number"
                      value={settings.max_login_attempts}
                      onChange={(e) => updateSetting('max_login_attempts', parseInt(e.target.value) || 5)}
                      placeholder="5"
                      min="1"
                      max="20"
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium mb-2">ูููุฉ ุงูุชูุงุก ุงูุฌูุณุฉ (ุฏูููุฉ)</label>
                    <Input
                      type="number"
                      value={settings.session_timeout}
                      onChange={(e) => updateSetting('session_timeout', parseInt(e.target.value) || 30)}
                      placeholder="30"
                      min="5"
                      max="1440"
                    />
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* ุชุจููุจ SEO */}
        <TabsContent value="seo">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Globe className="w-5 h-5" />
                ุฅุนุฏุงุฏุงุช ุชุญุณูู ูุญุฑูุงุช ุงูุจุญุซ (SEO)
              </CardTitle>
              <CardDescription>ุชุญุณูู ุธููุฑ ุงููุชุฌุฑ ูู ูุญุฑูุงุช ุงูุจุญุซ</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <label className="block text-sm font-medium mb-2">ุนููุงู ุงูุตูุญุฉ (Meta Title)</label>
                <Input
                  value={settings.meta_title || ''}
                  onChange={(e) => updateSetting('meta_title', e.target.value)}
                  placeholder="ูุชุฌุฑู ุงูุฅููุชุฑููู - ุฃูุถู ุงูููุชุฌุงุช ุจุฃุณุนุงุฑ ูููุฒุฉ"
                  maxLength={60}
                />
                <p className="text-xs text-gray-500 mt-1">
                  {(settings.meta_title || '').length}/60 ุญุฑู
                </p>
              </div>

              <div>
                <label className="block text-sm font-medium mb-2">ูุตู ุงูุตูุญุฉ (Meta Description)</label>
                <Textarea
                  value={settings.meta_description || ''}
                  onChange={(e) => updateSetting('meta_description', e.target.value)}
                  placeholder="ุงูุชุดู ูุฌููุนุฉ ูุงุณุนุฉ ูู ุงูููุชุฌุงุช ุนุงููุฉ ุงูุฌูุฏุฉ ุจุฃุณุนุงุฑ ุชูุงูุณูุฉ. ุชุณูู ุงูุขู ูุงุณุชูุชุน ุจุฎุฏูุฉ ุนููุงุก ููุชุงุฒุฉ ูุดุญู ุณุฑูุน."
                  rows={3}
                  maxLength={160}
                />
                <p className="text-xs text-gray-500 mt-1">
                  {(settings.meta_description || '').length}/160 ุญุฑู
                </p>
              </div>

              <div>
                <label className="block text-sm font-medium mb-2">ุงููููุงุช ุงูููุชุงุญูุฉ (Meta Keywords)</label>
                <Input
                  value={settings.meta_keywords || ''}
                  onChange={(e) => updateSetting('meta_keywords', e.target.value)}
                  placeholder="ูุชุฌุฑ ุฅููุชุฑูููุ ุชุณูู ุฃูููุงููุ ููุชุฌุงุช ุนุงููุฉ ุงูุฌูุฏุฉ"
                />
                <p className="text-xs text-gray-500 mt-1">
                  ุงูุตู ุงููููุงุช ุงูููุชุงุญูุฉ ุจููุงุตู
                </p>
              </div>

              <div className="p-4 bg-blue-50 border border-blue-200 rounded-lg">
                <h4 className="font-medium text-blue-900 mb-2">ูุตุงุฆุญ ูุชุญุณูู SEO:</h4>
                <ul className="text-sm text-blue-800 space-y-1">
                  <li>โข ุงุณุชุฎุฏู ุนููุงูุงู ูุตููุงู ูุฌุฐุงุจุงู (50-60 ุญุฑู)</li>
                  <li>โข ุงูุชุจ ูุตูุงู ูููุฏุงู ููููุนุงู (150-160 ุญุฑู)</li>
                  <li>โข ุงุฎุชุฑ ูููุงุช ููุชุงุญูุฉ ุฐุงุช ุตูุฉ ุจููุชุฌุงุชู</li>
                  <li>โข ุชุฃูุฏ ูู ุฃู ุงููุญุชูู ูุฑูุฏ ูุฐู ูููุฉ</li>
                </ul>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default NewStoreSetup;
