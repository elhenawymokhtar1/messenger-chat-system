/**
 * ๐ฐ ุตูุญุฉ ุฎุทุท ุงูุงุดุชุฑุงู ุงููุจุณุทุฉ ููุงุฎุชุจุงุฑ
 */

import React, { useEffect, useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { toast } from 'sonner';

interface SimplePlan {
  id: string;
  name: string;
  name_ar: string;
  monthly_price: number;
  yearly_price: number;
}

const SimpleSubscriptionPlans: React.FC = () => {
  const [plans, setPlans] = useState<SimplePlan[]>([]);
  const [loading, setLoading] = useState(true);
  const [selectedBilling, setSelectedBilling] = useState<'monthly' | 'yearly'>('monthly');

  // ุจูุงูุงุช ุงุฎุชุจุงุฑูุฉ
  const testPlans: SimplePlan[] = [
    {
      id: '1',
      name: 'Starter',
      name_ar: 'ุงููุจุชุฏุฆ',
      monthly_price: 0,
      yearly_price: 0
    },
    {
      id: '2', 
      name: 'Basic',
      name_ar: 'ุงูุฃุณุงุณูุฉ',
      monthly_price: 19,
      yearly_price: 190
    },
    {
      id: '3',
      name: 'Professional', 
      name_ar: 'ุงููุชูุฏูุฉ',
      monthly_price: 49,
      yearly_price: 490
    },
    {
      id: '4',
      name: 'Business',
      name_ar: 'ุงููุคุณุณูุฉ', 
      monthly_price: 99,
      yearly_price: 990
    }
  ];

  useEffect(() => {
    // console.log('๐ SimpleSubscriptionPlans mounted');
    // ูุญุงูุงุฉ ุชุญููู ุงูุจูุงูุงุช
    setTimeout(() => {
      setPlans(testPlans);
      setLoading(false);
      // console.log('โ Test plans loaded:', testPlans);
    }, 1000);
  }, []);

  const handleSelectPlan = (plan: SimplePlan) => {
    // console.log('๐ฏ Plan selected:', plan);
    const price = selectedBilling === 'monthly' ? plan.monthly_price : plan.yearly_price;
    const priceText = price === 0 ? 'ูุฌุงูู' : `$${price}`;
    
    toast.success(`ุชู ุงุฎุชูุงุฑ ุฎุทุฉ ${plan.name_ar} (${priceText}/${selectedBilling === 'monthly' ? 'ุดูุฑ' : 'ุณูุฉ'})`);
  };

  const handleBillingChange = (billing: 'monthly' | 'yearly') => {
    // console.log('๐ฐ Billing changed to:', billing);
    setSelectedBilling(billing);
    toast.info(`ุชู ุงูุชุจุฏูู ุฅูู ุงูููุชุฑุฉ ${billing === 'monthly' ? 'ุงูุดูุฑูุฉ' : 'ุงูุณูููุฉ'}`);
  };

  if (loading) {
    return (
      <div className="container mx-auto px-4 py-8" role="main">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"></div>
          <p className="mt-4 text-gray-600">ุฌุงุฑู ุชุญููู ุฎุทุท ุงูุงุดุชุฑุงู...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="text-center mb-8">
        <h1 className="text-3xl font-bold text-gray-900 mb-4">
          ุฎุทุท ุงูุงุดุชุฑุงู ุงููุจุณุทุฉ (ุงุฎุชุจุงุฑ)
        </h1>
        <p className="text-gray-600">
          ุตูุญุฉ ุงุฎุชุจุงุฑ ููุชุฃูุฏ ูู ุนูู ุงูุฃุฒุฑุงุฑ
        </p>
      </div>

      {/* ุฃุฒุฑุงุฑ ุงูุชุจุฏูู */}
      <div className="flex justify-center mb-8">
        <div className="bg-gray-100 p-1 rounded-lg">
          <button
            onClick={() => handleBillingChange('monthly')}
            className={`px-6 py-2 rounded-md transition-all ${
              selectedBilling === 'monthly'
                ? 'bg-white text-blue-600 shadow-sm'
                : 'text-gray-600 hover:text-gray-900'
            }`}
          >
            ุดูุฑู
          </button>
          <button
            onClick={() => handleBillingChange('yearly')}
            className={`px-6 py-2 rounded-md transition-all ${
              selectedBilling === 'yearly'
                ? 'bg-white text-blue-600 shadow-sm'
                : 'text-gray-600 hover:text-gray-900'
            }`}
          >
            ุณููู (ููุฑ 20%)
          </button>
        </div>
      </div>

      {/* ุงูุฎุทุท */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {plans.map((plan) => {
          const price = selectedBilling === 'monthly' ? plan.monthly_price : plan.yearly_price;
          const priceText = price === 0 ? 'ูุฌุงูู' : `$${price}`;
          
          return (
            <Card key={plan.id} className="border-2 hover:shadow-lg transition-all">
              <CardHeader className="text-center">
                <CardTitle className="text-xl">{plan.name_ar}</CardTitle>
                <div className="text-2xl font-bold text-blue-600">
                  {priceText}
                  {price > 0 && (
                    <span className="text-sm text-gray-500">
                      /{selectedBilling === 'monthly' ? 'ุดูุฑ' : 'ุณูุฉ'}
                    </span>
                  )}
                </div>
              </CardHeader>
              
              <CardContent>
                <Button
                  onClick={() => handleSelectPlan(plan)}
                  className="w-full bg-blue-500 hover:bg-blue-600 text-white"
                >
                  {price === 0 ? 'ุงุจุฏุฃ ูุฌุงูุงู' : 'ุงุฎุชุฑ ูุฐู ุงูุฎุทุฉ'}
                </Button>
              </CardContent>
            </Card>
          );
        })}
      </div>

      {/* ูุนูููุงุช ุงูุงุฎุชุจุงุฑ */}
      <div className="mt-8 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
        <h3 className="font-bold text-yellow-800 mb-2">ูุนูููุงุช ุงูุงุฎุชุจุงุฑ:</h3>
        <ul className="text-yellow-700 text-sm space-y-1">
          <li>โข ุงูุชุญ Developer Tools (F12) ูุชุญูู ูู Console</li>
          <li>โข ุงุถุบุท ุนูู ุฃุฒุฑุงุฑ ุงูุชุจุฏูู ุจูู ุงูุดูุฑู ูุงูุณููู</li>
          <li>โข ุงุถุบุท ุนูู ุฃุฒุฑุงุฑ ุงุฎุชูุงุฑ ุงูุฎุทุท</li>
          <li>โข ูุฌุจ ุฃู ุชุธูุฑ ุฅุดุนุงุฑุงุช Toast ูุชุณุฌูู ูู Console</li>
        </ul>
      </div>
    </div>
  );
};

export default SimpleSubscriptionPlans;
