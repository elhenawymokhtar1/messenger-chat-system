/**
 * ุฎุฏูุฉ ุฅุนุฏุงุฏ ุงูุดุฑูุงุช ุงูุฌุฏูุฏุฉ ุชููุงุฆูุงู
 * ุชุถูู ุฃู ูู ุดุฑูุฉ ุฌุฏูุฏุฉ ุชุญุตู ุนูู ุฅุนุฏุงุฏุงุช Gemini ูุฎุตุตุฉ
 */


export class CompanySetupService {
  
  /**
   * ุฅุนุฏุงุฏ ุดุงูู ููุดุฑูุฉ ุงูุฌุฏูุฏุฉ
   */
  static async setupNewCompany(companyId: string, companyName: string): Promise<boolean> {
    try {
      console.log(`๐ข [SETUP] ุฅุนุฏุงุฏ ุดุฑูุฉ ุฌุฏูุฏุฉ: ${companyName}`);
      
      // 1. ุฅูุดุงุก ูุชุฌุฑ ููุดุฑูุฉ ุฅุฐุง ูู ููู ููุฌูุฏ
      await this.createCompanyStore(companyId, companyName);
      
      // 2. ุฅูุดุงุก ุฅุนุฏุงุฏุงุช Gemini ูุฎุตุตุฉ
      await this.createCustomGeminiSettings(companyId, companyName);
      
      console.log(`โ [SETUP] ุชู ุฅุนุฏุงุฏ ุงูุดุฑูุฉ ${companyName} ุจูุฌุงุญ`);
      return true;
      
    } catch (error) {
      console.error(`โ [SETUP] ุฎุทุฃ ูู ุฅุนุฏุงุฏ ุงูุดุฑูุฉ ${companyName}:`, error);
      return false;
    }
  }

  /**
   * ุฅูุดุงุก ูุชุฌุฑ ููุดุฑูุฉ
   */
  private static async createCompanyStore(companyId: string, companyName: string): Promise<void> {
    try {
      // ุงูุชุญูู ูู ูุฌูุฏ ูุชุฌุฑ
      const { data: existingStore } = await supabase
        // TODO: Replace with MySQL API
        // TODO: Replace with MySQL API
        .eq('company_id', companyId)
        .single();

      if (existingStore) {
        console.log(`๐ช [SETUP] ุงููุชุฌุฑ ููุฌูุฏ ุจุงููุนู ููุดุฑูุฉ: ${companyName}`);
        return;
      }

      // ุฅูุดุงุก ูุชุฌุฑ ุฌุฏูุฏ
      const storeName = `ูุชุฌุฑ ${companyName}`;
      
      const { error: storeError } = await supabase
        // TODO: Replace with MySQL API
        // TODO: Replace with MySQL API;

      if (storeError) {
        throw new Error(`ุฎุทุฃ ูู ุฅูุดุงุก ุงููุชุฌุฑ: ${storeError.message}`);
      }

      console.log(`โ [SETUP] ุชู ุฅูุดุงุก ุงููุชุฌุฑ: ${storeName}`);
      
    } catch (error) {
      console.error(`โ [SETUP] ุฎุทุฃ ูู ุฅูุดุงุก ุงููุชุฌุฑ:`, error);
      throw error;
    }
  }

  /**
   * ุฅูุดุงุก ุฅุนุฏุงุฏุงุช Gemini ูุฎุตุตุฉ ููุดุฑูุฉ
   */
  private static async createCustomGeminiSettings(companyId: string, companyName: string): Promise<void> {
    try {
      // ุงูุชุญูู ูู ูุฌูุฏ ุฅุนุฏุงุฏุงุช Gemini
      const { data: existingSettings } = await supabase
        // TODO: Replace with MySQL API
        // TODO: Replace with MySQL API
        .eq('company_id', companyId)
        .single();

      if (existingSettings) {
        console.log(`๐ค [SETUP] ุฅุนุฏุงุฏุงุช Gemini ููุฌูุฏุฉ ุจุงููุนู ููุดุฑูุฉ: ${companyName}`);
        // ุชุญุฏูุซ ุงูุฅุนุฏุงุฏุงุช ุงูููุฌูุฏุฉ ุจุงูุจุฑููุช ุงููุฎุตุต
        await this.updateExistingGeminiSettings(companyId, companyName);
        return;
      }

      // ุงูุญุตูู ุนูู ุงุณู ุงููุชุฌุฑ
      const { data: store } = await supabase
        // TODO: Replace with MySQL API
        // TODO: Replace with MySQL API
        .eq('company_id', companyId)
        .single();

      const storeName = store?.name || `ูุชุฌุฑ ${companyName}`;

      // ุฅูุดุงุก ุงูุจุฑููุช ุงููุฎุตุต
      const customPrompt = this.generateCustomPrompt(storeName);
      const customProductsPrompt = this.generateCustomProductsPrompt(storeName);

      // ุฅูุดุงุก ุฅุนุฏุงุฏุงุช Gemini ุฌุฏูุฏุฉ
      // TODO: Replace with MySQL API
      const geminiError = null;

      if (geminiError) {
        throw new Error(`ุฎุทุฃ ูู ุฅูุดุงุก ุฅุนุฏุงุฏุงุช Gemini: ${geminiError.message}`);
      }

      console.log(`โ [SETUP] ุชู ุฅูุดุงุก ุฅุนุฏุงุฏุงุช Gemini ูุฎุตุตุฉ ููุดุฑูุฉ: ${companyName}`);
      
    } catch (error) {
      console.error(`โ [SETUP] ุฎุทุฃ ูู ุฅูุดุงุก ุฅุนุฏุงุฏุงุช Gemini:`, error);
      throw error;
    }
  }

  /**
   * ุชุญุฏูุซ ุฅุนุฏุงุฏุงุช Gemini ุงูููุฌูุฏุฉ
   */
  private static async updateExistingGeminiSettings(companyId: string, companyName: string): Promise<void> {
    try {
      // ุงูุญุตูู ุนูู ุงุณู ุงููุชุฌุฑ
      const { data: store } = await supabase
        // TODO: Replace with MySQL API
        // TODO: Replace with MySQL API
        .eq('company_id', companyId)
        .single();

      const storeName = store?.name || `ูุชุฌุฑ ${companyName}`;

      // ุฅูุดุงุก ุงูุจุฑููุช ุงููุฎุตุต
      const customPrompt = this.generateCustomPrompt(storeName);
      const customProductsPrompt = this.generateCustomProductsPrompt(storeName);

      // ุชุญุฏูุซ ุงูุฅุนุฏุงุฏุงุช
      const { error: updateError } = await supabase
        // TODO: Replace with MySQL API
        const updateError = null;

      if (updateError) {
        throw new Error(`ุฎุทุฃ ูู ุชุญุฏูุซ ุฅุนุฏุงุฏุงุช Gemini: ${updateError.message}`);
      }

      console.log(`โ [SETUP] ุชู ุชุญุฏูุซ ุฅุนุฏุงุฏุงุช Gemini ููุดุฑูุฉ: ${companyName}`);
      
    } catch (error) {
      console.error(`โ [SETUP] ุฎุทุฃ ูู ุชุญุฏูุซ ุฅุนุฏุงุฏุงุช Gemini:`, error);
      throw error;
    }
  }

  /**
   * ุชูููุฏ ุจุฑููุช ูุฎุตุต ููุดุฑูุฉ
   */
  private static generateCustomPrompt(storeName: string): string {
    return `ุฃูุช ูุณุงุนุฏุฉ ุฐููุฉ ูููุฐุจุฉ ูู"${storeName}". 

๐ฏ ูููุชู:
- ูุณุงุนุฏุฉ ุงูุนููุงุก ูู ุงุฎุชูุงุฑ ุงูููุชุฌุงุช ุงูููุงุณุจุฉ
- ุชูุฏูู ูุนูููุงุช ุฏูููุฉ ุนู ุงูููุชุฌุงุช ูุงูุฃุณุนุงุฑ
- ุฅุฑุดุงุฏ ุงูุนููุงุก ุฎูุงู ุนูููุฉ ุงูุทูุจ
- ุงูุฑุฏ ุจุทุฑููุฉ ูุฏูุฏุฉ ูููููุฉ

๐ฌ ุฃุณููุจ ุงูุชูุงุตู:
- ุงุณุชุฎุฏูู ุงูููุฌุฉ ุงููุตุฑูุฉ ุงููุฏูุฏุฉ
- ูููู ูููุฏุฉ ููุจุงุดุฑุฉ
- ุงุณุฃูู ุนู ุงูุชูุงุตูู ุงููุทููุจุฉ ูุฅููุงู ุงูุทูุจ

๐๏ธ ุนูุฏ ุงูุณุคุงู ุนู ุงูููุชุฌุงุช:
- ุงุนุฑุถู ุงูููุชุฌุงุช ุงููุชููุฑุฉ ูู "${storeName}"
- ุงุฐูุฑู ุงูุฃุณุนุงุฑ ูุงูุฃููุงู ูุงูููุงุณุงุช ุงููุชุงุญุฉ
- ุณุงุนุฏู ุงูุนููู ูู ุงุฎุชูุงุฑ ุงูููุชุฌ ุงูููุงุณุจ

๐ฆ ูุฅููุงู ุงูุทูุจ ุชุญุชุงุฌูู:
- ุงุณู ุงูุนููู ุงููุงูู
- ุฑูู ุงููุงุชู
- ุงูุนููุงู ุจุงูุชูุตูู
- ุงุณู ุงูููุชุฌ
- ุงูููู ูุงูููุงุณ ุงููุทููุจ

๐จ ุฅุฑุณุงู ุงูุตูุฑ:
ุนูุฏูุง ูุทูุจ ุงูุนููู ุตูุฑุฉ ููุชุฌุ ุงุณุชุฎุฏูู ูุฐุง ุงูุฃูุฑ:
[SEND_IMAGE: ุงุณู ุงูููุชุฌ ุงูุฏููู]

๐ก ูุตุงุฆุญ ูููุฉ:
- ูุง ุชุฎุชุฑุนู ููุชุฌุงุช ุบูุฑ ููุฌูุฏุฉ
- ุงุณุชุฎุฏูู ุงููุนูููุงุช ุงูุญููููุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
- ูููู ุตุงุฏูุฉ ุจุฎุตูุต ุงูุชููุฑ ูุงูุฃุณุนุงุฑ
- ุณุงุนุฏู ุงูุนููู ูู ุงุชุฎุงุฐ ุงููุฑุงุฑ ุงูุตุญูุญ

ูููู ูุณุงุนุฏุฉ ูุซุงููุฉ ูู"${storeName}"! ๐`;
  }

  /**
   * ุชูููุฏ ุจุฑููุช ุงูููุชุฌุงุช ุงููุฎุตุต
   */
  private static generateCustomProductsPrompt(storeName: string): string {
    return `๐๏ธ ููุชุฌุงุช "${storeName}":

ุนูุฏูุง ูุณุฃู ุงูุนููู ุนู ุงูููุชุฌุงุชุ ุงุณุชุฎุฏูู ุงููุนูููุงุช ุงูุญููููุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช.

๐ธ ูุฅุฑุณุงู ุตูุฑ ุงูููุชุฌุงุช:
ุงุณุชุฎุฏูู ุงูุฃูุฑ: [SEND_IMAGE: ุงุณู ุงูููุชุฌ]

๐ฏ ุชุฐูุฑู:
- ุงุนุฑุถู ููุท ููุชุฌุงุช "${storeName}"
- ุงุณุชุฎุฏูู ุงูุฃุณุนุงุฑ ุงูุญููููุฉ
- ุงุฐูุฑู ุงูุฃููุงู ูุงูููุงุณุงุช ุงููุชุงุญุฉ ูุนููุงู
- ุณุงุนุฏู ุงูุนููู ูู ุงุฎุชูุงุฑ ุงูููุชุฌ ุงูููุงุณุจ

ูููู ูุณุงุนุฏุฉ ูุซุงููุฉ ูุฃุฑุณูู ุงูุตูุฑ ุนูุฏ ุงูุทูุจ! ๐`;
  }

  /**
   * ุฅุตูุงุญ ุฌููุน ุงูุดุฑูุงุช ุงูููุฌูุฏุฉ
   */
  static async fixAllExistingCompanies(): Promise<void> {
    try {
      console.log('๐ง [SETUP] ุฅุตูุงุญ ุฌููุน ุงูุดุฑูุงุช ุงูููุฌูุฏุฉ...');
      
      const { data: companies, error } = await supabase
        // TODO: Replace with MySQL API
        // TODO: Replace with MySQL API;

      if (error) {
        throw new Error(`ุฎุทุฃ ูู ุฌูุจ ุงูุดุฑูุงุช: ${error.message}`);
      }

      if (!companies || companies.length === 0) {
        console.log('๐ญ [SETUP] ูุง ุชูุฌุฏ ุดุฑูุงุช ููุฅุตูุงุญ');
        return;
      }

      console.log(`๐ [SETUP] ุนุฏุฏ ุงูุดุฑูุงุช ููุฅุตูุงุญ: ${companies.length}`);

      for (const company of companies) {
        await this.setupNewCompany(company.id, company.name);
      }

      console.log('โ [SETUP] ุชู ุฅุตูุงุญ ุฌููุน ุงูุดุฑูุงุช ุจูุฌุงุญ');
      
    } catch (error) {
      console.error('โ [SETUP] ุฎุทุฃ ูู ุฅุตูุงุญ ุงูุดุฑูุงุช:', error);
      throw error;
    }
  }
}
