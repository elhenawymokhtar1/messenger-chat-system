// ูุญุต ุนุฏุฏ ุงูููุชุฌุงุช ูุดุฑูุฉ ูุนููุฉ
const mysql = require('mysql2/promise');

// ุฅุนุฏุงุฏุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช
const dbConfig = {
  host: '193.203.168.103',
  user: 'u384034873_conversations',
  password: '0165676135Aa@A',
  database: 'u384034873_conversations',
  charset: 'utf8mb4',
  timezone: '+00:00'
};

async function checkCompanyProducts(email) {
  let connection;
  
  try {
    console.log(`๐ ุงูุจุญุซ ุนู ุงูุดุฑูุฉ: ${email}`);
    
    // ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
    connection = await mysql.createConnection(dbConfig);
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
    
    // ุงูุจุญุซ ุนู ุงูุดุฑูุฉ ุจุงูุฅูููู
    const [companies] = await connection.execute(`
      SELECT id, name, email, created_at, status
      FROM companies 
      WHERE email = ?
    `, [email]);
    
    if (companies.length === 0) {
      console.log(`โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุดุฑูุฉ ุจุงูุฅูููู: ${email}`);
      return;
    }
    
    const company = companies[0];
    console.log(`โ ุชู ุงูุนุซูุฑ ุนูู ุงูุดุฑูุฉ:`);
    console.log(`   ๐ง ุงูุฅูููู: ${company.email}`);
    console.log(`   ๐ข ุงูุงุณู: ${company.name}`);
    console.log(`   ๐ ุงููุนุฑู: ${company.id}`);
    console.log(`   ๐ ุชุงุฑูุฎ ุงูุฅูุดุงุก: ${company.created_at}`);
    console.log(`   ๐ ุงูุญุงูุฉ: ${company.status}`);
    
    // ุญุณุงุจ ุนุฏุฏ ุงูููุชุฌุงุช
    const [products] = await connection.execute(`
      SELECT COUNT(*) as total_count,
             COUNT(CASE WHEN status = 'active' THEN 1 END) as active_count,
             COUNT(CASE WHEN status = 'inactive' THEN 1 END) as inactive_count,
             COUNT(CASE WHEN status = 'draft' THEN 1 END) as draft_count
      FROM products 
      WHERE company_id = ?
    `, [company.id]);
    
    const counts = products[0];
    
    console.log(`\n๐ฆ ุฅุญุตุงุฆูุงุช ุงูููุชุฌุงุช:`);
    console.log(`   ๐ ุฅุฌูุงูู ุงูููุชุฌุงุช: ${counts.total_count}`);
    console.log(`   โ ุงูููุชุฌุงุช ุงููุดุทุฉ: ${counts.active_count}`);
    console.log(`   โ ุงูููุชุฌุงุช ุบูุฑ ุงููุดุทุฉ: ${counts.inactive_count}`);
    console.log(`   ๐ ุงููุณูุฏุงุช: ${counts.draft_count}`);
    
    // ุฌูุจ ุนููุฉ ูู ุงูููุชุฌุงุช
    if (counts.total_count > 0) {
      const [sampleProducts] = await connection.execute(`
        SELECT id, name, price, status, created_at
        FROM products 
        WHERE company_id = ?
        ORDER BY created_at DESC
        LIMIT 5
      `, [company.id]);
      
      console.log(`\n๐ ุนููุฉ ูู ุงูููุชุฌุงุช (ุขุฎุฑ 5 ููุชุฌุงุช):`);
      sampleProducts.forEach((product, index) => {
        console.log(`   ${index + 1}. ${product.name}`);
        console.log(`      ๐ฐ ุงูุณุนุฑ: ${product.price} ุฑูุงู`);
        console.log(`      ๐ ุงูุญุงูุฉ: ${product.status}`);
        console.log(`      ๐ ุชุงุฑูุฎ ุงูุฅุถุงูุฉ: ${product.created_at}`);
        console.log(`      ๐ ุงููุนุฑู: ${product.id}`);
        console.log('');
      });
    }
    
    // ูุญุต ุงููุฆุงุช ุฅุฐุง ูุงูุช ููุฌูุฏุฉ
    const [categories] = await connection.execute(`
      SELECT category, COUNT(*) as count
      FROM products 
      WHERE company_id = ? AND category IS NOT NULL AND category != ''
      GROUP BY category
      ORDER BY count DESC
    `, [company.id]);
    
    if (categories.length > 0) {
      console.log(`๐ ุงููุฆุงุช:`);
      categories.forEach(cat => {
        console.log(`   - ${cat.category}: ${cat.count} ููุชุฌ`);
      });
    }
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ูุญุต ุงูููุชุฌุงุช:', error.message);
  } finally {
    if (connection) {
      await connection.end();
      console.log('๐ ุชู ุฅุบูุงู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
    }
  }
}

// ุชุดุบูู ุงูุณูุฑูุจุช
const email = process.argv[2] || 'kok@kok.com';

checkCompanyProducts(email)
  .then(() => {
    console.log('โ ุงูุชูู ุงููุญุต ุจูุฌุงุญ');
    process.exit(0);
  })
  .catch((error) => {
    console.error('โ ูุดู ุงููุญุต:', error);
    process.exit(1);
  });
