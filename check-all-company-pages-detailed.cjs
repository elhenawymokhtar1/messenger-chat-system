/**
 * ูุญุต ููุตู ูุฌููุน ุตูุญุงุช ุงูุดุฑูุฉ ุงูุชุฌุฑูุจูุฉ
 * ุชุงุฑูุฎ ุงูุฅูุดุงุก: 11 ููููู 2025
 */

const mysql = require('mysql2/promise');
const colors = require('colors');

// ุฅุนุฏุงุฏุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช
const dbConfig = {
  host: '193.203.168.103',
  user: 'u384034873_conversations',
  password: '0165676135Aa@A',
  database: 'u384034873_conversations',
  charset: 'utf8mb4',
  timezone: '+00:00'
};

class DetailedCompanyPagesChecker {
  constructor() {
    this.connection = null;
    this.companyId = 'company-2';
    this.companyEmail = 'test@company.com';
  }

  async connect() {
    try {
      console.log('๐ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...'.cyan);
      this.connection = await mysql.createConnection(dbConfig);
      console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ'.green);
      return true;
    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช:'.red, error.message);
      return false;
    }
  }

  async checkCompanyData() {
    try {
      console.log('\n๐ข ูุญุต ุจูุงูุงุช ุงูุดุฑูุฉ ุงูุชุฌุฑูุจูุฉ...'.yellow.bold);
      console.log('='.repeat(60).cyan);

      // ุงูุจุญุซ ุจุงููุนุฑู
      const [companyById] = await this.connection.execute(`
        SELECT * FROM companies WHERE id = ?
      `, [this.companyId]);

      // ุงูุจุญุซ ุจุงูุฅูููู
      const [companyByEmail] = await this.connection.execute(`
        SELECT * FROM companies WHERE email = ?
      `, [this.companyEmail]);

      console.log(`๐ ุงูุจุญุซ ุจุงููุนุฑู (${this.companyId}): ${companyById.length} ูุชูุฌุฉ`.cyan);
      console.log(`๐ ุงูุจุญุซ ุจุงูุฅูููู (${this.companyEmail}): ${companyByEmail.length} ูุชูุฌุฉ`.cyan);

      if (companyById.length > 0) {
        const company = companyById[0];
        console.log('\n๐ ุจูุงูุงุช ุงูุดุฑูุฉ:'.green);
        console.log(`   ๐ ุงููุนุฑู: ${company.id}`.white);
        console.log(`   ๐ ุงูุงุณู: ${company.name}`.white);
        console.log(`   ๐ง ุงูุฅูููู: ${company.email}`.white);
        console.log(`   ๐ฑ ุงููุงุชู: ${company.phone || 'ุบูุฑ ูุญุฏุฏ'}`.white);
        console.log(`   ๐ ุงูุญุงูุฉ: ${company.status}`.white);
        console.log(`   ๐ ุชุงุฑูุฎ ุงูุฅูุดุงุก: ${company.created_at}`.gray);
        return company;
      } else {
        console.log('โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุงูุดุฑูุฉ'.red);
        return null;
      }

    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ูุญุต ุจูุงูุงุช ุงูุดุฑูุฉ:'.red, error.message);
      return null;
    }
  }

  async checkAllFacebookTables() {
    try {
      console.log('\n๐ ูุญุต ุฌููุน ุฌุฏุงูู Facebook...'.yellow.bold);
      console.log('='.repeat(60).cyan);

      // ูุญุต ุฌุฏูู facebook_settings
      await this.checkFacebookSettingsTable();
      
      // ูุญุต ุฌุฏูู facebook_pages (ุฅุฐุง ูุงู ููุฌูุฏุงู)
      await this.checkFacebookPagesTable();
      
      // ูุญุต ุฃู ุฌุฏุงูู ุฃุฎุฑู ูุฏ ุชุญุชูู ุนูู ุตูุญุงุช Facebook
      await this.checkOtherFacebookTables();

    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ูุญุต ุฌุฏุงูู Facebook:'.red, error.message);
    }
  }

  async checkFacebookSettingsTable() {
    try {
      console.log('\n๐ ุฌุฏูู facebook_settings:'.yellow);
      
      // ุฌูุจ ุฌููุน ุงูุตูุญุงุช ููุดุฑูุฉ
      const [pages] = await this.connection.execute(`
        SELECT * FROM facebook_settings 
        WHERE company_id = ?
        ORDER BY created_at DESC
      `, [this.companyId]);

      console.log(`๐ ุนุฏุฏ ุงูุตูุญุงุช: ${pages.length}`.cyan);

      if (pages.length > 0) {
        pages.forEach((page, index) => {
          console.log(`\n   ๐ ุตูุญุฉ ${index + 1}:`.white.bold);
          console.log(`      ๐ ูุนุฑู ุงูุตูุญุฉ: ${page.page_id}`.gray);
          console.log(`      ๐ ุงุณู ุงูุตูุญุฉ: ${page.page_name || 'ุบูุฑ ูุญุฏุฏ'}`.white);
          console.log(`      ๐ ุงุณู ุงููุณุชุฎุฏู: ${page.page_username || 'ุบูุฑ ูุญุฏุฏ'}`.white);
          console.log(`      ๐ข ูุนุฑู ุงูุดุฑูุฉ: ${page.company_id}`.gray);
          console.log(`      โ ูุดุทุฉ: ${page.is_active ? 'ูุนู' : 'ูุง'}`.white);
          console.log(`      ๐ Webhook ููุนู: ${page.webhook_enabled ? 'ูุนู' : 'ูุง'}`.white);
          console.log(`      ๐ ุฑุงุจุท Webhook: ${page.webhook_url || 'ุบูุฑ ูุญุฏุฏ'}`.gray);
          console.log(`      ๐ ูุฏููุง Token: ${page.access_token ? 'ูุนู' : 'ูุง'}`.white);
          console.log(`      ๐ ุชุงุฑูุฎ ุงูุฅูุดุงุก: ${page.created_at}`.gray);
          console.log(`      ๐ ุขุฎุฑ ุชุญุฏูุซ: ${page.updated_at}`.gray);
        });
      } else {
        console.log('   โ ูุง ุชูุฌุฏ ุตูุญุงุช ูู ุฌุฏูู facebook_settings'.red);
      }

      return pages;

    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ูุญุต ุฌุฏูู facebook_settings:'.red, error.message);
      return [];
    }
  }

  async checkFacebookPagesTable() {
    try {
      console.log('\n๐ ุฌุฏูู facebook_pages:'.yellow);
      
      const [pages] = await this.connection.execute(`
        SELECT * FROM facebook_pages 
        WHERE company_id = ?
        ORDER BY created_at DESC
      `, [this.companyId]);

      console.log(`๐ ุนุฏุฏ ุงูุตูุญุงุช: ${pages.length}`.cyan);

      if (pages.length > 0) {
        pages.forEach((page, index) => {
          console.log(`\n   ๐ ุตูุญุฉ ${index + 1}:`.white.bold);
          console.log(`      ๐ ูุนุฑู ุงูุตูุญุฉ: ${page.page_id || page.facebook_page_id}`.gray);
          console.log(`      ๐ ุงุณู ุงูุตูุญุฉ: ${page.page_name || page.name}`.white);
          console.log(`      ๐ข ูุนุฑู ุงูุดุฑูุฉ: ${page.company_id}`.gray);
          console.log(`      โ ูุดุทุฉ: ${page.is_active || page.status === 'active' ? 'ูุนู' : 'ูุง'}`.white);
          console.log(`      ๐ ูุฏููุง Token: ${page.access_token ? 'ูุนู' : 'ูุง'}`.white);
          console.log(`      ๐ ุชุงุฑูุฎ ุงูุฅูุดุงุก: ${page.created_at}`.gray);
        });
      } else {
        console.log('   โ ูุง ุชูุฌุฏ ุตูุญุงุช ูู ุฌุฏูู facebook_pages'.red);
      }

      return pages;

    } catch (error) {
      console.log('   โน๏ธ ุฌุฏูู facebook_pages ุบูุฑ ููุฌูุฏ ุฃู ูุงุฑุบ'.yellow);
      return [];
    }
  }

  async checkOtherFacebookTables() {
    try {
      console.log('\n๐ ุงูุจุญุซ ุนู ุฌุฏุงูู Facebook ุฃุฎุฑู...'.yellow);
      
      // ุงูุญุตูู ุนูู ูุงุฆูุฉ ุฌููุน ุงูุฌุฏุงูู
      const [tables] = await this.connection.execute(`
        SHOW TABLES LIKE '%facebook%'
      `);

      console.log(`๐ ุฌุฏุงูู Facebook ุงูููุฌูุฏุฉ: ${tables.length}`.cyan);
      
      tables.forEach(table => {
        const tableName = Object.values(table)[0];
        console.log(`   ๐ ${tableName}`.white);
      });

      // ูุญุต ูู ุฌุฏูู ููุจุญุซ ุนู ุตูุญุงุช ูุฑุชุจุทุฉ ุจุงูุดุฑูุฉ
      for (const table of tables) {
        const tableName = Object.values(table)[0];
        if (tableName !== 'facebook_settings' && tableName !== 'facebook_pages') {
          await this.checkCustomFacebookTable(tableName);
        }
      }

    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุงูุจุญุซ ุนู ุฌุฏุงูู Facebook ุฃุฎุฑู:'.red, error.message);
    }
  }

  async checkCustomFacebookTable(tableName) {
    try {
      console.log(`\n๐ ูุญุต ุฌุฏูู ${tableName}:`.yellow);
      
      // ูุญุต ุจููุฉ ุงูุฌุฏูู
      const [columns] = await this.connection.execute(`
        SHOW COLUMNS FROM ${tableName}
      `);

      const columnNames = columns.map(col => col.Field);
      console.log(`   ๐ ุงูุฃุนูุฏุฉ: ${columnNames.join(', ')}`.gray);

      // ุงูุจุญุซ ุนู ุฃุนูุฏุฉ ุชุญุชูู ุนูู company_id
      if (columnNames.includes('company_id')) {
        const [rows] = await this.connection.execute(`
          SELECT * FROM ${tableName} WHERE company_id = ?
        `, [this.companyId]);

        console.log(`   ๐ ุนุฏุฏ ุงูุตููู: ${rows.length}`.cyan);
        
        if (rows.length > 0) {
          rows.forEach((row, index) => {
            console.log(`   ๐ ุตู ${index + 1}:`.white);
            Object.keys(row).forEach(key => {
              console.log(`      ${key}: ${row[key]}`.gray);
            });
          });
        }
      } else {
        console.log('   โน๏ธ ูุง ูุญุชูู ุนูู ุนููุฏ company_id'.yellow);
      }

    } catch (error) {
      console.log(`   โ ุฎุทุฃ ูู ูุญุต ุฌุฏูู ${tableName}: ${error.message}`.red);
    }
  }

  async checkAllCompanyReferences() {
    try {
      console.log('\n๐ ุงูุจุญุซ ุนู ุฌููุน ุงููุฑุงุฌุน ููุดุฑูุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช...'.yellow.bold);
      console.log('='.repeat(60).cyan);

      // ุงูุจุญุซ ูู ุฌููุน ุงูุฌุฏุงูู ุนู company_id
      const [tables] = await this.connection.execute(`
        SELECT TABLE_NAME 
        FROM INFORMATION_SCHEMA.COLUMNS 
        WHERE TABLE_SCHEMA = ? AND COLUMN_NAME = 'company_id'
      `, [dbConfig.database]);

      console.log(`๐ ุงูุฌุฏุงูู ุงูุชู ุชุญุชูู ุนูู company_id: ${tables.length}`.cyan);

      for (const table of tables) {
        const tableName = table.TABLE_NAME;
        console.log(`\n๐ ูุญุต ุฌุฏูู ${tableName}:`.yellow);
        
        try {
          const [rows] = await this.connection.execute(`
            SELECT COUNT(*) as count FROM ${tableName} WHERE company_id = ?
          `, [this.companyId]);

          const count = rows[0].count;
          console.log(`   ๐ ุนุฏุฏ ุงูุตููู: ${count}`.cyan);

          if (count > 0) {
            // ุฌูุจ ุฃูู 5 ุตููู ููุนุฑุถ
            const [sampleRows] = await this.connection.execute(`
              SELECT * FROM ${tableName} WHERE company_id = ? LIMIT 5
            `, [this.companyId]);

            sampleRows.forEach((row, index) => {
              console.log(`   ๐ ุตู ${index + 1}:`.white);
              Object.keys(row).slice(0, 5).forEach(key => { // ุนุฑุถ ุฃูู 5 ุฃุนูุฏุฉ ููุท
                console.log(`      ${key}: ${row[key]}`.gray);
              });
              if (Object.keys(row).length > 5) {
                console.log(`      ... ู ${Object.keys(row).length - 5} ุฃุนูุฏุฉ ุฃุฎุฑู`.gray);
              }
            });
          }
        } catch (error) {
          console.log(`   โ ุฎุทุฃ ูู ูุญุต ${tableName}: ${error.message}`.red);
        }
      }

    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุงูุจุญุซ ุนู ูุฑุงุฌุน ุงูุดุฑูุฉ:'.red, error.message);
    }
  }

  async generateDetailedReport() {
    try {
      console.log('\n๐ ุชูุฑูุฑ ููุตู ุดุงูู...'.green.bold);
      console.log('='.repeat(60).green);

      // ุฅุญุตุงุฆูุงุช ุนุงูุฉ
      const [totalPages] = await this.connection.execute(`
        SELECT COUNT(*) as count FROM facebook_settings WHERE company_id = ?
      `, [this.companyId]);

      const [activePagesCount] = await this.connection.execute(`
        SELECT COUNT(*) as count FROM facebook_settings WHERE company_id = ? AND is_active = 1
      `, [this.companyId]);

      const [webhookEnabledCount] = await this.connection.execute(`
        SELECT COUNT(*) as count FROM facebook_settings WHERE company_id = ? AND webhook_enabled = 1
      `, [this.companyId]);

      console.log('๐ ุงูุฅุญุตุงุฆูุงุช:'.cyan);
      console.log(`   ๐ ุฅุฌูุงูู ุงูุตูุญุงุช: ${totalPages[0].count}`.white);
      console.log(`   โ ุงูุตูุญุงุช ุงููุดุทุฉ: ${activePagesCount[0].count}`.white);
      console.log(`   ๐ Webhooks ููุนูุฉ: ${webhookEnabledCount[0].count}`.white);

      // ูุงุฆูุฉ ููุตูุฉ ุจุฌููุน ุงูุตูุญุงุช
      const [allPages] = await this.connection.execute(`
        SELECT page_id, page_name, page_username, is_active, webhook_enabled, 
               access_token IS NOT NULL as has_token, created_at
        FROM facebook_settings 
        WHERE company_id = ?
        ORDER BY created_at DESC
      `, [this.companyId]);

      console.log('\n๐ ูุงุฆูุฉ ููุตูุฉ ุจุฌููุน ุงูุตูุญุงุช:'.cyan);
      if (allPages.length > 0) {
        allPages.forEach((page, index) => {
          console.log(`\n${index + 1}. ๐ ${page.page_name || 'ุตูุญุฉ ุบูุฑ ูุณูุงุฉ'}`.white.bold);
          console.log(`   ๐ ุงููุนุฑู: ${page.page_id}`.gray);
          console.log(`   ๐ค ุงุณู ุงููุณุชุฎุฏู: ${page.page_username || 'ุบูุฑ ูุญุฏุฏ'}`.white);
          console.log(`   โ ูุดุทุฉ: ${page.is_active ? 'ูุนู' : 'ูุง'}`.white);
          console.log(`   ๐ Webhook: ${page.webhook_enabled ? 'ููุนู' : 'ูุนุทู'}`.white);
          console.log(`   ๐ Token: ${page.has_token ? 'ููุฌูุฏ' : 'ููููุฏ'}`.white);
          console.log(`   ๐ ุชุงุฑูุฎ ุงูุฅูุดุงุก: ${page.created_at}`.gray);
        });
      } else {
        console.log('โ ูุง ุชูุฌุฏ ุตูุญุงุช ูุฑุชุจุทุฉ ุจูุฐู ุงูุดุฑูุฉ'.red);
      }

      return allPages;

    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุชูุฑูุฑ ุงูููุตู:'.red, error.message);
      return [];
    }
  }

  async close() {
    if (this.connection) {
      await this.connection.end();
      console.log('\n๐ ุชู ุฅุบูุงู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช'.gray);
    }
  }
}

// ุชุดุบูู ุงููุญุต ุงูููุตู
async function main() {
  const checker = new DetailedCompanyPagesChecker();
  
  try {
    const connected = await checker.connect();
    if (!connected) {
      process.exit(1);
    }

    console.log('๐ ุจุฏุก ุงููุญุต ุงูููุตู ููุดุฑูุฉ ุงูุชุฌุฑูุจูุฉ...'.cyan.bold);
    
    // ูุญุต ุจูุงูุงุช ุงูุดุฑูุฉ
    const company = await checker.checkCompanyData();
    
    if (company) {
      // ูุญุต ุฌููุน ุฌุฏุงูู Facebook
      await checker.checkAllFacebookTables();
      
      // ุงูุจุญุซ ุนู ุฌููุน ูุฑุงุฌุน ุงูุดุฑูุฉ
      await checker.checkAllCompanyReferences();
      
      // ุฅูุดุงุก ุชูุฑูุฑ ููุตู
      await checker.generateDetailedReport();
    }

  } catch (error) {
    console.error('๐ฅ ุฎุทุฃ ุนุงู:'.red, error);
  } finally {
    await checker.close();
  }
}

// ุชุดุบูู ุงูุณูุฑููพุช
if (require.main === module) {
  main().catch(console.error);
}

module.exports = DetailedCompanyPagesChecker;
