-- ===================================
-- ๐ ุฌุฏูู ุณุฌู ุฃูุดุทุฉ ุงููุฏูุฑ ุงูุฃุณุงุณู
-- ===================================

CREATE TABLE IF NOT EXISTS super_admin_logs (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    
    -- ๐ค ูุนุฑู ุงููุฏูุฑ ุงูุฃุณุงุณู
    admin_id UUID NOT NULL REFERENCES system_admins(id) ON DELETE CASCADE,
    
    -- ๐ฏ ููุน ุงููุดุงุท
    action VARCHAR(100) NOT NULL, -- login, login_as_company, view_company, etc.
    
    -- ๐ ุชูุงุตูู ุงููุดุงุท
    details JSONB DEFAULT '{}', -- ุชูุงุตูู ุฅุถุงููุฉ ุนู ุงููุดุงุท
    
    -- ๐ ูุนูููุงุช ุงูุดุจูุฉ
    ip_address INET, -- ุนููุงู IP
    user_agent TEXT, -- ูุนูููุงุช ุงููุชุตูุญ
    
    -- ๐ ููุช ุงููุดุงุท
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ุฅูุดุงุก ููุงุฑุณ ููุจุญุซ ุงูุณุฑูุน
CREATE INDEX IF NOT EXISTS idx_super_admin_logs_admin_id ON super_admin_logs(admin_id);
CREATE INDEX IF NOT EXISTS idx_super_admin_logs_action ON super_admin_logs(action);
CREATE INDEX IF NOT EXISTS idx_super_admin_logs_created_at ON super_admin_logs(created_at);

-- ุฅูุดุงุก ููุฑุณ ูุฑูุจ ููุจุญุซ ุงููุชูุฏู
CREATE INDEX IF NOT EXISTS idx_super_admin_logs_admin_action_date 
ON super_admin_logs(admin_id, action, created_at DESC);

-- ุชุนููู ุนูู ุงูุฌุฏูู
COMMENT ON TABLE super_admin_logs IS 'ุณุฌู ุฌููุน ุฃูุดุทุฉ ุงููุฏูุฑ ุงูุฃุณุงุณู ูููุธุงู';
COMMENT ON COLUMN super_admin_logs.action IS 'ููุน ุงููุดุงุท: login, login_as_company, view_companies, etc.';
COMMENT ON COLUMN super_admin_logs.details IS 'ุชูุงุตูู ุฅุถุงููุฉ ุจุตูุบุฉ JSON';

-- ===================================
-- ๐ง ุฏูุงู ูุณุงุนุฏุฉ
-- ===================================

-- ุฏุงูุฉ ูุชูุธูู ุงูุณุฌูุงุช ุงููุฏููุฉ (ุฃูุซุฑ ูู 6 ุฃุดูุฑ)
CREATE OR REPLACE FUNCTION cleanup_old_super_admin_logs()
RETURNS INTEGER AS $$
DECLARE
    deleted_count INTEGER;
BEGIN
    DELETE FROM super_admin_logs 
    WHERE created_at < NOW() - INTERVAL '6 months';
    
    GET DIAGNOSTICS deleted_count = ROW_COUNT;
    
    RETURN deleted_count;
END;
$$ LANGUAGE plpgsql;

-- ุฏุงูุฉ ููุญุตูู ุนูู ุฅุญุตุงุฆูุงุช ุฃูุดุทุฉ ุงููุฏูุฑ ุงูุฃุณุงุณู
CREATE OR REPLACE FUNCTION get_super_admin_activity_stats(
    admin_id_param UUID DEFAULT NULL,
    days_back INTEGER DEFAULT 30
)
RETURNS TABLE (
    action VARCHAR(100),
    count BIGINT,
    last_activity TIMESTAMP WITH TIME ZONE
) AS $$
BEGIN
    RETURN QUERY
    SELECT 
        sal.action,
        COUNT(*) as count,
        MAX(sal.created_at) as last_activity
    FROM super_admin_logs sal
    WHERE 
        (admin_id_param IS NULL OR sal.admin_id = admin_id_param)
        AND sal.created_at >= NOW() - (days_back || ' days')::INTERVAL
    GROUP BY sal.action
    ORDER BY count DESC;
END;
$$ LANGUAGE plpgsql;

-- ===================================
-- ๐ ุฅุฏุฑุงุฌ ุจูุงูุงุช ุชุฌุฑูุจูุฉ (ุงุฎุชูุงุฑูุฉ)
-- ===================================

-- ูููู ุฅุถุงูุฉ ุจูุงูุงุช ุชุฌุฑูุจูุฉ ููุง ุฅุฐุง ูุฒู ุงูุฃูุฑ
