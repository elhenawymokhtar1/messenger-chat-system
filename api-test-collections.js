// ุชู ูุญุต ุงูุฃุฏุงุฉ - console.log ููุจูู ูู ุฃุฏูุงุช ุงูุชุดุฎูุต
/**
 * ๐งช ูุฌููุนุงุช ุงุฎุชุจุงุฑ API ุดุงููุฉ
 * ุชุญุชูู ุนูู ุฌููุน ุงูุณููุงุฑูููุงุช ูุงูุงุฎุชุจุงุฑุงุช
 */

import AdvancedAPITester from './advanced-api-tester.js';

async function runAllAPITests() {
  const tester = new AdvancedAPITester();

  // 1๏ธโฃ ูุฌููุนุฉ ุงุฎุชุจุงุฑุงุช ุงูุฃุณุงุณูุฉ
  const basicCollection = tester.createCollection(
    'ุงูุงุฎุชุจุงุฑุงุช ุงูุฃุณุงุณูุฉ',
    'ุงุฎุชุจุงุฑ endpoints ุงูุฃุณุงุณูุฉ ููุชุฃูุฏ ูู ุนูู ุงูุฎุงุฏู'
  );

  tester.addRequest(basicCollection, {
    name: 'ูุญุต ุตุญุฉ ุงูุฎุงุฏู',
    method: 'GET',
    url: '{{baseURL}}/api/health',
    expectedStatus: 200,
    tests: [
      {
        name: 'ุงูุงุณุชุฌุงุจุฉ ุณุฑูุนุฉ',
        script: `
          pm.test("ููุช ุงูุงุณุชุฌุงุจุฉ ุฃูู ูู 1000ms", function() {
            expect.toBeLessThan(response.time, 1000);
          });
        `
      },
      {
        name: 'ุงูุญุงูุฉ ุตุญูุญุฉ',
        script: `
          pm.test("ุญุงูุฉ ุงูุงุณุชุฌุงุจุฉ 200", function() {
            expect.toBe(response.status, 200);
          });
        `
      }
    ]
  });

  // 2๏ธโฃ ูุฌููุนุฉ ุงุฎุชุจุงุฑุงุช ุงููุตุงุฏูุฉ
  const authCollection = tester.createCollection(
    'ุงุฎุชุจุงุฑุงุช ุงููุตุงุฏูุฉ',
    'ุงุฎุชุจุงุฑ ุชุณุฌูู ุงูุฏุฎูู ูุงูุชุณุฌูู ูุงูุฃูุงู'
  );

  tester.addRequest(authCollection, {
    name: 'ุชุณุฌูู ุฏุฎูู ุตุญูุญ',
    method: 'POST',
    url: '{{baseURL}}/api/companies/login',
    body: {
      email: '{{testEmail}}',
      password: '{{testPassword}}'
    },
    expectedStatus: [200, 401],
    tests: [
      {
        name: 'ุงุณุชุฌุงุจุฉ JSON ุตุญูุญุฉ',
        script: `
          pm.test("ุงูุงุณุชุฌุงุจุฉ JSON", function() {
            expect.toBe(typeof response.body, 'object');
          });
        `
      }
    ]
  });

  tester.addRequest(authCollection, {
    name: 'ุชุณุฌูู ุฏุฎูู ุจุจูุงูุงุช ุฎุงุทุฆุฉ',
    method: 'POST',
    url: '{{baseURL}}/api/companies/login',
    body: {
      email: 'wrong@example.com',
      password: 'wrongpassword'
    },
    expectedStatus: 401,
    tests: [
      {
        name: 'ุฑูุถ ุงูุจูุงูุงุช ุงูุฎุงุทุฆุฉ',
        script: `
          pm.test("ุฑูุถ ุชุณุฌูู ุงูุฏุฎูู", function() {
            expect.toBe(response.status, 401);
          });
        `
      }
    ]
  });

  // 3๏ธโฃ ูุฌููุนุฉ ุงุฎุชุจุงุฑุงุช ุงูุดุฑูุงุช
  const companiesCollection = tester.createCollection(
    'ุงุฎุชุจุงุฑุงุช ุงูุดุฑูุงุช',
    'ุงุฎุชุจุงุฑ ุฅุฏุงุฑุฉ ุจูุงูุงุช ุงูุดุฑูุงุช'
  );

  tester.addRequest(companiesCollection, {
    name: 'ูุงุฆูุฉ ุงูุดุฑูุงุช',
    method: 'GET',
    url: '{{baseURL}}/api/companies',
    expectedStatus: 200,
    tests: [
      {
        name: 'ูุงุฆูุฉ ุตุญูุญุฉ',
        script: `
          pm.test("ุงูุงุณุชุฌุงุจุฉ ูุตูููุฉ", function() {
            expect.toBe(Array.isArray(response.body), true);
          });
        `
      }
    ]
  });

  tester.addRequest(companiesCollection, {
    name: 'ุชุณุฌูู ุดุฑูุฉ ุฌุฏูุฏุฉ',
    method: 'POST',
    url: '{{baseURL}}/api/companies/register',
    body: {
      name: 'ุดุฑูุฉ ุงุฎุชุจุงุฑ API',
      email: 'api-test@example.com',
      password: 'testpassword123'
    },
    expectedStatus: [201, 409],
    tests: [
      {
        name: 'ุงุณุชุฌุงุจุฉ ุงูุชุณุฌูู',
        script: `
          pm.test("ุงุณุชุฌุงุจุฉ ุตุญูุญุฉ ููุชุณุฌูู", function() {
            if (response.status === 201) {
              expect.toBe(typeof response.body.id, 'number');
            }
          });
        `
      }
    ]
  });

  // 4๏ธโฃ ูุฌููุนุฉ ุงุฎุชุจุงุฑุงุช ุงูุฑุณุงุฆู
  const messagesCollection = tester.createCollection(
    'ุงุฎุชุจุงุฑุงุช ุงูุฑุณุงุฆู',
    'ุงุฎุชุจุงุฑ ุฅุฑุณุงู ูุงุณุชูุจุงู ุงูุฑุณุงุฆู'
  );

  tester.addRequest(messagesCollection, {
    name: 'ูุงุฆูุฉ ุงูุฑุณุงุฆู',
    method: 'GET',
    url: '{{baseURL}}/api/messages',
    expectedStatus: 200,
    tests: [
      {
        name: 'ุจูุงูุงุช ุงูุฑุณุงุฆู',
        script: `
          pm.test("ุจูุงูุงุช ุงูุฑุณุงุฆู ุตุญูุญุฉ", function() {
            expect.toBe(typeof response.body, 'object');
          });
        `
      }
    ]
  });

  // 5๏ธโฃ ูุฌููุนุฉ ุงุฎุชุจุงุฑุงุช ุงูุฃุฏุงุก
  const performanceCollection = tester.createCollection(
    'ุงุฎุชุจุงุฑุงุช ุงูุฃุฏุงุก',
    'ุงุฎุชุจุงุฑ ุณุฑุนุฉ ุงูุงุณุชุฌุงุจุฉ ูุงูุฃุฏุงุก'
  );

  // ุฅุถุงูุฉ ุนุฏุฉ ุทูุจุงุช ูุชุชุงููุฉ ูุงุฎุชุจุงุฑ ุงูุฃุฏุงุก
  for (let i = 1; i <= 5; i++) {
    tester.addRequest(performanceCollection, {
      name: `ุงุฎุชุจุงุฑ ุฃุฏุงุก ${i}`,
      method: 'GET',
      url: '{{baseURL}}/api/health',
      expectedStatus: 200,
      tests: [
        {
          name: `ุงูุฃุฏุงุก ${i}`,
          script: `
            pm.test("ููุช ุงูุงุณุชุฌุงุจุฉ ูุนููู", function() {
              expect.toBeLessThan(response.time, 2000);
            });
          `
        }
      ]
    });
  }

  // 6๏ธโฃ ูุฌููุนุฉ ุงุฎุชุจุงุฑุงุช ุงูุฃูุงู
  const securityCollection = tester.createCollection(
    'ุงุฎุชุจุงุฑุงุช ุงูุฃูุงู',
    'ุงุฎุชุจุงุฑ ุงูุซุบุฑุงุช ุงูุฃูููุฉ ูุงูุญูุงูุฉ'
  );

  tester.addRequest(securityCollection, {
    name: 'ุงุฎุชุจุงุฑ SQL Injection',
    method: 'POST',
    url: '{{baseURL}}/api/companies/login',
    body: {
      email: "admin'; DROP TABLE companies; --",
      password: 'test'
    },
    expectedStatus: [400, 401],
    tests: [
      {
        name: 'ุญูุงูุฉ ูู SQL Injection',
        script: `
          pm.test("ุฑูุถ SQL injection", function() {
            expect.toBe(response.status !== 200, true);
          });
        `
      }
    ]
  });

  tester.addRequest(securityCollection, {
    name: 'ุงุฎุชุจุงุฑ XSS',
    method: 'POST',
    url: '{{baseURL}}/api/companies/register',
    body: {
      name: '<script>alert("xss")</script>',
      email: 'xss@test.com',
      password: 'test123'
    },
    expectedStatus: [400, 401, 409],
    tests: [
      {
        name: 'ุญูุงูุฉ ูู XSS',
        script: `
          pm.test("ุฑูุถ XSS", function() {
            if (response.body && response.body.name) {
              expect.toBe(response.body.name.includes('<script>'), false);
            }
          });
        `
      }
    ]
  });

  // ุชุดุบูู ุฌููุน ุงููุฌููุนุงุช
  console.log('๐ ุจุฏุก ุชุดุบูู ุฌููุน ูุฌููุนุงุช ุงุฎุชุจุงุฑ API...\n');

  try {
    await tester.runCollection(basicCollection);
    await tester.runCollection(authCollection);
    await tester.runCollection(companiesCollection);
    await tester.runCollection(messagesCollection);
    await tester.runCollection(performanceCollection);
    await tester.runCollection(securityCollection);

    // ุฅูุดุงุก ุงูุชูุฑูุฑ ุงูููุงุฆู
    console.log('\n๐ ุฅูุดุงุก ุงูุชูุฑูุฑ ุงูููุงุฆู...');
    tester.generateHTMLReport();

    // ููุฎุต ุงููุชุงุฆุฌ
    const totalCollections = tester.results.length;
    const totalRequests = tester.results.reduce((sum, col) => sum + col.summary.total, 0);
    const totalPassed = tester.results.reduce((sum, col) => sum + col.summary.passed, 0);
    const totalFailed = tester.results.reduce((sum, col) => sum + col.summary.failed, 0);
    const successRate = Math.round((totalPassed / totalRequests) * 100);

    console.log('\n' + '='.repeat(80));
    console.log('๐ฏ ููุฎุต ููุงุฆู ูุฌููุน ุงุฎุชุจุงุฑุงุช API');
    console.log('='.repeat(80));
    console.log(`๐ ุงููุฌููุนุงุช: ${totalCollections}`);
    console.log(`๐ ุฅุฌูุงูู ุงูุทูุจุงุช: ${totalRequests}`);
    console.log(`โ ูุฌุญ: ${totalPassed}`);
    console.log(`โ ูุดู: ${totalFailed}`);
    console.log(`๐ ูุณุจุฉ ุงููุฌุงุญ: ${successRate}%`);

    // ุชูููู ุงูุฌูุฏุฉ
    let grade = 'ููุชุงุฒ';
    if (successRate < 70) grade = 'ูุญุชุงุฌ ุชุญุณูู';
    else if (successRate < 85) grade = 'ุฌูุฏ';
    else if (successRate < 95) grade = 'ุฌูุฏ ุฌุฏุงู';

    console.log(`๐ ุงูุชูููู: ${grade}`);

    // ุงูุชูุตูุงุช
    console.log('\n๐ก ุงูุชูุตูุงุช:');
    if (totalFailed > 0) {
      console.log(`  โข ุฅุตูุงุญ ${totalFailed} endpoint ูุงุดู`);
    }
    if (successRate < 90) {
      console.log('  โข ุชุญุณูู ุงุณุชูุฑุงุฑ API');
    }
    console.log('  โข ูุฑุงุฌุนุฉ ุงูุชูุฑูุฑ HTML ููุชูุงุตูู ุงููุงููุฉ');

  } catch (error) {
    console.error('๐ฅ ุฎุทุฃ ูู ุชุดุบูู ุงูุงุฎุชุจุงุฑุงุช:', error);
  }
}

// ุชุดุบูู ุงูุงุฎุชุจุงุฑุงุช
runAllAPITests();
